data= xlsread('edited_hourly_biddata.xlsx');

vector= mat2vec(data);

plot(vector);

gobbled_data= data_goblin(vector);

plot(gobbled_data);

gobbled_data = gobbled_data';
%resulting image looks like outliers were added
%look at first hundred values and see what looks weird
%gobbled_data(1:500);

new_data= preprocessor(gobbled_data)
plot(new_data)

%qqplot(new_data)

%histogram(log(new_data))

%qqplot(log(new_data))
num_days = length(newdata)/24;
%index_of_problempoint= find(isnan(new_data))
%index_of_problempoint/24;

%is there a way to make this into just the integer 67?
%newdata(index_of_problempoint) = 1

histogram(new_data);

peak_energy_vector = peakenergy(data);
%std(new_data)






Here is the code for my functions


mat2vec.m:

function [ vector ] = mat2vec( data )
%Convert matrix (data) to vector

[rows, columns] = size(data);

for i=1:rows
        
    % when i is = 1, vector index 1-24 equals data(all of row one)
        vector((i-1)*24+1:(i-1)*24+24) = data(i,:);

        
end

end


preprocessor.m:

function [ processed_data ] = preprocessor( gobbled_data )


%identifies missing and nonsensical data

%missing data - 0
%negative data - -999

%output will be the index of missing data points in vector
%missing = find(gobbled_data == 0);

for i= 1:length(gobbled_data)
    
    if gobbled_data(i) < 1
        
        gobbled_data(i) = mean([gobbled_data(i+1) gobbled_data(i-1)]);
        
    elseif gobbled_data(i) > 200000
        
        gobbled_data(i) = mean([gobbled_data(i+1) gobbled_data(i-1)]);
   
    end
    
end

processed_data = gobbled_data;

end



peakenergy.m:

function [ vector] = peakenergy( matrix )

[rows, columns] = size(matrix);

max=0;
for i = 1:columns
    for j = 1:rows
        if matrix(j, i)> max
            max = matrix(j, i);
        end
        
    end
    
    vector(i) = max;
    
end

end
